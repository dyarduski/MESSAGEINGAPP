# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainMessageWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests
import json
import time

link = 'http://duski.pythonanywhere.com'


class ThreadClass(QtCore.QThread):
    any_signal = QtCore.pyqtSignal()

    def __init__(self, parent=None):
        super(ThreadClass, self).__init__(parent)

    def run(self):
        while (True):
            time.sleep(2)
            self.ui.m = self.ui.session.post(
                f"{link}/msg", data={'to': self.ui.current_friend, 'from': self.ui.username})
            self.any_signal.emit()
    def stop(self):
        self.terminate()


class Ui_MainMessageWIndow(object):
    def setupUi(self, MainMessageWIndow):
        MainMessageWIndow.setObjectName("MainMessageWIndow")
        MainMessageWIndow.setWindowTitle("MainMessageWIndow")
        MainMessageWIndow.resize(923, 462)
        MainMessageWIndow.setFixedSize(923, 462)
        MainMessageWIndow.setStyleSheet("background-color: rgb(20, 61, 89);")
        self.centralwidget = QtWidgets.QWidget(MainMessageWIndow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(-13, -14, 221, 491))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.formLayout = QtWidgets.QFormLayout(self.frame)
        self.formLayout.setObjectName("formLayout")
        self.scrollArea = QtWidgets.QScrollArea(self.frame)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 174, 560))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(
            self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.Friends = QtWidgets.QVBoxLayout()
        self.Friends.setContentsMargins(3, 0, -1, 500)
        self.Friends.setSpacing(7)
        self.Friends.setObjectName("Friends")
        self.Enter_message = QtWidgets.QLineEdit(self.centralwidget)
        self.Enter_message.setGeometry(QtCore.QRect(210, 410, 551, 41))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(16)
        self.Enter_message.setFont(font)
        self.Enter_message.setAutoFillBackground(False)
        self.Enter_message.setStyleSheet("background-color:rgb(255, 248, 33,200);\n"
                                         "border:0px;")
        self.Enter_message.setText("")
        self.Enter_message.setObjectName("Enter_message")
        self.send = QtWidgets.QPushButton(self.centralwidget)
        self.send.setGeometry(QtCore.QRect(767, 410, 151, 41))
        font = QtGui.QFont()
        font.setFamily("Cascadia Code Light")
        font.setPointSize(16)
        self.send.setFont(font)
        self.send.setAutoFillBackground(False)
        self.send.setStyleSheet("QPushButton\n"
                                "{\n"
                                "background-color :rgb(255, 255,255,115);\n"
                                "border-style: outset;\n"
                                "border-width: 1px;\n"
                                "border-radius: 1px;\n"
                                "border-color:black;\n"
                                "}\n"
                                "QPushButton::pressed\n"
                                "{\n"
                                "background-color :rgb(255, 255,255,135);\n"
                                "}\n"
                                "\n"
                                "")
        self.send.setCheckable(False)
        self.send.setChecked(False)
        self.send.setDefault(True)
        self.send.setFlat(False)
        self.send.setObjectName("send")
        self.send.setText("Send")
        self.verticalLayout.addLayout(self.Friends)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.formLayout.setWidget(
            0, QtWidgets.QFormLayout.SpanningRole, self.scrollArea)
        MainMessageWIndow.setCentralWidget(self.centralwidget)

        QtCore.QMetaObject.connectSlotsByName(MainMessageWIndow)

        self.friends_list = []
        self.message_list = []
        self.current_friend = None
        self.y = 370
        self.t1 = None
        self.session = requests.session()
        self.session.post(f"{link}/login",
                          data={'nm': self.username, 'ps': self.password})
        self.get_users()
        self.send.clicked.connect(self.send_msg)

    def main(self, name):
        self.m = self.session.post(
            f"{link}/msg", data={'to': name, 'from': self.username})
        self.get_message(name)
        if self.t1 is not None:
            self.t1.stop()
        self.t1 = ThreadClass(parent=None)
        self.t1.ui = self
        self.t1.any_signal.connect(self.get_message)
        self.t1.start()

    def sort_messages(self):
        self.times = []
        self.mCopy = self.m.copy()
        for i in self.mCopy:
            sender, message, timestamp = i.split(":")
            self.times.append(timestamp)
        self.times.sort(reverse=True)
        for x, b in enumerate(self.times):
            for v, _ in enumerate(self.times):
                sender, message, timestamp = self.mCopy[v].split(":")
                if b == timestamp:
                    self.m[x] = f"{sender}:{message}"
                    break

    def send_msg(self):

        if self.current_friend is None:
            return
        if len(self.Enter_message.text()) > 30:
            self.Boxinfo("Message too long")
            return
        self.session.post(f"{link}/send_msg", data={
            'to': self.current_friend, 'from': self.username, 'msg': self.Enter_message.text()})

    def get_message(self, name=None):
        for i in self.message_list:
            i.close()
        self.message_list.clear()
        self.y = 370
        if name is not None:
            self.current_friend = name
        self.m = json.loads(self.m.content)
        self.m.reverse()
        self.sort_messages()
        for i in self.m:
            self.load_messages(i)

    def load_messages(self, text):
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(17)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_2.setText(text)
        self.label_2.move(210, self.y)
        self.y -= self.label_2.size().height() + 8
        self.label_2.setStyleSheet("background-color :rgb(255, 248, 33)")
        self.label_2.show()
        self.message_list.append(self.label_2)

    def make_btn(self, name):
        self.Test = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setFamily("Cascadia Code Light")
        font.setPointSize(15)
        self.Test.setFont(font)
        self.Test.setAutoFillBackground(False)
        self.Test.setStyleSheet("QPushButton\n"
                                "{\n"
                                "background-color :rgb(244, 180, 26);\n"
                                "border-style: outset;\n"
                                "border-width: 1px;\n"
                                "border-radius: 1px;\n"
                                "border-color:black;\n"
                                "}\n"
                                "QPushButton::pressed\n"
                                "{\n"
                                "background-color :rgb(255, 220, 24);\n"
                                "}\n"
                                "\n"
                                "")
        self.Test.setCheckable(False)
        self.Test.setChecked(False)
        self.Test.setDefault(True)
        self.Test.setFlat(False)
        self.Test.setObjectName(name)
        self.Test.setText(name)
        self.Test.clicked.connect(lambda: self.main(name))
        self.Friends.addWidget(self.Test)
        self.friends_list.append(self.Test)

    def get_users(self):
        u = self.session.get(f"{link}/users")
        u = json.loads(u.content)
        for i in u:
            if i == self.username:
                continue
            self.make_btn(i)

    def Boxinfo(self, text):
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Information)
        msg.setWindowTitle("Info")
        msg.setText(text)
        msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
        msg.exec_()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainMessageWIndow = QtWidgets.QMainWindow()
    ui = Ui_MainMessageWIndow()
    ui.setupUi(MainMessageWIndow)
    MainMessageWIndow.show()
    sys.exit(app.exec_())
